@use 'variables' as vars;
@use 'mixins' as *;
@use 'sass:map';

button {
  background-color: color(light, link);
  color: white;
  border: none;
  padding: 10px;
  cursor: pointer;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: color(light, hover);
  }

  &.noche {
    background-color: color(dark, link);

    &:hover {
      background-color: color(dark, hover);
    }
  }
}

.scroll-top {
  position: fixed;
  bottom: 1.5rem;
  right: 1.5rem;
  background-color: color(light, link);
  color: white;
  font-size: 1.5rem;
  border-radius: 50%;
  padding: 0.6rem 1rem;
  text-decoration: none;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  transition: background-color 0.3s ease;

  &:hover {
    background-color: color(light, hover);
  }

  body.noche & {
    background-color: color(dark, link);

    &:hover {
      background-color: color(dark, hover);
    }
  }
}

//Proyectos
.proyectos {
    h2 {
      text-align: center;
      margin-bottom: 2rem;
    }
  
    .swiper {
      height: auto;
      padding-bottom: 3rem;
  
      .swiper-slide {
        display: flex;
        justify-content: center;
  
        a.proyecto-card {
          @include flex(column, flex-start, center);
          text-decoration: none;
          background-color: color(extra, white);
          border-radius: 1rem;
          overflow: hidden;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
          width: 260px;
          transition: transform 0.3s ease, box-shadow 0.3s ease;
  
          &:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
          }
  
          img {
            width: 100%;
            height: 160px;
            object-fit: cover;
          }
  
          h3 {
            padding: 1rem;
            font-size: map.get(vars.$font-sizes, m);
            color: color(light, text);
            text-align: center;
          }
  
          body.noche & {
            background-color: color(dark, extra-dark-background);
            h3 {
              color: color(dark, text);
            }
          }
        }
      }
    }
  }
  
//Dark/Light mode
.mode-switch {
    position: relative;
  
    .checkbox {
      opacity: 0;
      position: absolute;
    }
  
    .checkbox-label {
      width: 60px;
      height: 30px;
      background-color: color(dark, primary);
      display: flex;
      align-items: center;
      justify-content: space-between;
      border-radius: 50px;
      padding: 0 6px; // ligero ajuste
      cursor: pointer;
      position: relative;
      transition: background-color 0.3s ease;
  
      i {
        color: white;
        font-size: 14px;
        z-index: 2;
      }
  
      .ball {
        width: 24px;
        height: 24px;
        background-color: white;
        position: absolute;
        top: 3px;
        left: 3px;
        border-radius: 50%;
        transition: transform 0.3s ease;
        z-index: 1;
      }
  
     
    }
  
    .checkbox:checked + .checkbox-label .ball {
      transform: translateX(40px);
    }
  }
  


  //Tecnologias
  .technologies {
    @include flex($direction: row, $justify: center, $align: center, $wrap: wrap);
    gap: 20px;
    margin-top: 30px;
  }
  
  .tech-item {
    @include flex($direction: column, $justify: center, $align: center);
    width: 100px;
    text-align: center;
  
    i {
      font-size: 40px;
      color: color(light, text); 
    }
  
    p {
      margin-top: 10px;
      font-size: 14px;
      color: color(light, text); 
    }
  
    &:hover {
      i,
      p {
        color: color(light, hover); 
      }
    }
  }
  
  // Modo oscuro 
  body.noche {
    .tech-item {
      i,
      p {
        color: color(dark, text); 
      }
  
      &:hover {
        i,
        p {
          color: color(dark, hover); 
        }
      }
    }
  }
  